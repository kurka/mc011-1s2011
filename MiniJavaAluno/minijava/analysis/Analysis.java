/* This file was generated by SableCC (http://www.sablecc.org/). */

package minijava.analysis;

import minijava.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAProgram(AProgram node);
    void caseAMainClass(AMainClass node);
    void caseAClassDeclSimpleClassDecl(AClassDeclSimpleClassDecl node);
    void caseAClassDeclExtendsClassDecl(AClassDeclExtendsClassDecl node);
    void caseAVarDecl(AVarDecl node);
    void caseAMethodDecl(AMethodDecl node);
    void caseAIntArrayTypeType(AIntArrayTypeType node);
    void caseABooleanTypeType(ABooleanTypeType node);
    void caseAIntegerTypeType(AIntegerTypeType node);
    void caseAIdentifierTypeType(AIdentifierTypeType node);
    void caseAFormal(AFormal node);
    void caseABlockStatement(ABlockStatement node);
    void caseAWhileStatement(AWhileStatement node);
    void caseAIfStatement(AIfStatement node);
    void caseAIfElseStatement(AIfElseStatement node);
    void caseAPrintStatement(APrintStatement node);
    void caseAAssignStatement(AAssignStatement node);
    void caseAArrayAssignStatement(AArrayAssignStatement node);
    void caseAAndExp(AAndExp node);
    void caseALessthanExp(ALessthanExp node);
    void caseAPlusExp(APlusExp node);
    void caseAMinusExp(AMinusExp node);
    void caseATimesExp(ATimesExp node);
    void caseANotExp(ANotExp node);
    void caseAArraylengthExp(AArraylengthExp node);
    void caseACallExp(ACallExp node);
    void caseAArraylookupExp(AArraylookupExp node);
    void caseAIntegerliteralExp(AIntegerliteralExp node);
    void caseATrueExp(ATrueExp node);
    void caseAFalseExp(AFalseExp node);
    void caseAIdentifierexpExp(AIdentifierexpExp node);
    void caseAThisExp(AThisExp node);
    void caseANewarrayExp(ANewarrayExp node);
    void caseANewobjectExp(ANewobjectExp node);

    void caseTTclass(TTclass node);
    void caseTMain(TMain node);
    void caseTExtends(TExtends node);
    void caseTPublic(TPublic node);
    void caseTReturn(TReturn node);
    void caseTThis(TThis node);
    void caseTNew(TNew node);
    void caseTStringType(TStringType node);
    void caseTIntType(TIntType node);
    void caseTBooleanType(TBooleanType node);
    void caseTIf(TIf node);
    void caseTElse(TElse node);
    void caseTWhile(TWhile node);
    void caseTPrint(TPrint node);
    void caseTLength(TLength node);
    void caseTSemicolon(TSemicolon node);
    void caseTComma(TComma node);
    void caseTEqual(TEqual node);
    void caseTTrue(TTrue node);
    void caseTFalse(TFalse node);
    void caseTLsquare(TLsquare node);
    void caseTRsquare(TRsquare node);
    void caseTLcurly(TLcurly node);
    void caseTRcurly(TRcurly node);
    void caseTLparen(TLparen node);
    void caseTRparen(TRparen node);
    void caseTId(TId node);
    void caseTInteger(TInteger node);
    void caseTLess(TLess node);
    void caseTAnd(TAnd node);
    void caseTPlus(TPlus node);
    void caseTMinus(TMinus node);
    void caseTMul(TMul node);
    void caseTDot(TDot node);
    void caseTNot(TNot node);
    void caseTComment(TComment node);
    void caseTBlank(TBlank node);
    void caseEOF(EOF node);
}
